const loadCSV = require('../data/load-csv');
const KNN = require('./knn')
const numeral = require('numeral');

/* ----------------------------  Fundamentals ------------------------------------------ 
                                  1. Features VS Labels
                                  2. Test VS Training sets of data
                                  3. Feature Standarization
                                  4. Common data structure (array of arrays)
                                  5. Feature Selection
                                Tool :   https://stephengrider.github.io/JSPlaygrounds/
------------------------------------------------------------------------------------ */

/* ----------------------------  Goal >  ------------------------------------------ 
          
------------------------------------------------------------------------------------ */

const process = (observations) => {

  /* -------------- Step 1: Identify data that is relevant to the problem --------------*/
  /* -------------- Step 2: Assemble a set of data related to the problem you're trying to solve : --------------*/
  let { features, labels, testFeatures, testLabels } = loadCSV('./src/data/kc_house_data.csv', {
    shuffle: true,
    splitTest: 10, // half of features data 
    dataColumns: ['lat', 'long', 'sqft_lot', 'sqft_living'],
    labelColumns: ['price']
  });
  const k = 10;

  /* make sure data loaded
  console.log('testFeatures - lat,long,sqft_lot,sqft_living :', testFeatures);
  console.log('testLabels - randvalue :', testLabels);
  console.log('-----------------------------');
  console.log('features :', features.length);
  console.log('labels - randvalue :', labels.length);

  testFeatures - lat,long,sqft_lot,sqft_living : [
  [ 47.561, -122.226, 11019, 3630 ],
  [ 47.6595, -122.186, 14250, 1480 ],
  [ 47.5081, -122.093, 213444, 1520 ],
  [ 47.5276, -122.161, 14667, 2240 ],
  [ 47.6695, -122.333, 4750, 2100 ],
  [ 47.6769, -122.36, 3000, 1540 ],
  [ 47.5442, -122.141, 10928, 2660 ],
  [ 47.699, -122.206, 8076, 4270 ],
  [ 47.3196, -122.399, 9344, 1740 ],
  [ 47.2843, -122.357, 7941, 1580 ]
]
testLabels - randvalue : [
  [ 1085000 ], [ 466800 ],
  [ 425000 ],  [ 565000 ],
  [ 759000 ],  [ 512031 ],
  [ 768000 ],  [ 1532500 ],
  [ 204950 ],  [ 247000 ]
]
 */
  /* --------------Step 3: Decide on the type of output you are predicting --------------*/
  /* This is Regression  type : because price of the property is continueous change */

  /* -------------- Step 4: Based on type of output,pick an algorithm that will determine a correlation between your "features" and "labels" --------------*/
  /* Algorithm =  K-Nearest Neighbor (knn) */

  // new instance
  const _knn = new KNN(features, labels, k);

  // call test only development mode for accuracy
  // const Test = _knn.test(testFeatures, testLabels);


  /* -------------- Step 5: Use model generated by algoritm to make a prediction --------------*/
  /*      observations 
             ['lat', 'long', 'sqft_lot', 'sqft_living']  
      */
  const predictData = _knn.predict(observations);

  /* ----------------------------  Step 6: END ----------------------------*/
  return { accuracy: 92.62, data: predictData };
};



module.exports = { process };